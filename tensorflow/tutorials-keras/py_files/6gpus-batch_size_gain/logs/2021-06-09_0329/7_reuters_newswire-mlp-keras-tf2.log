Number of devices: 6
batch_size_per_replica: 512
batch_size: 3072 = 512 * 6
8982 training samples
2246 test samples
11228 total samples
8982 training labels, 2246 test labels
? period ended december 31 shr profit 11 cts vs loss 24 cts net profit 224 271 vs loss 511 349 revs 7 258 688 vs 7 200 349 reuter 3
x_train (8982, 10000)
x_test  (2246, 10000)
y_train_dummy (8982, 46)
y_test_dummy  (2246, 46)
3 [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
4 [0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
y_train (8982, 46)
y_test  (2246, 46)
3 [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
4 [0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
x_val  (1000, 10000)
y_val  (1000, 46)
partial_x_train  (7982, 10000)
partial_y_train  (7982, 46)
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
dense (Dense)                (None, 64)                640064    
_________________________________________________________________
dense_1 (Dense)              (None, 64)                4160      
_________________________________________________________________
dense_2 (Dense)              (None, 46)                2990      
=================================================================
Total params: 647,214
Trainable params: 647,214
Non-trainable params: 0
_________________________________________________________________
Epoch 1/10
1/3 [=========>....................] - ETA: 2s - loss: 3.8221 - accuracy: 0.02803/3 [==============================] - 2s 279ms/step - loss: 3.7009 - accuracy: 0.1589 - val_loss: 3.1256 - val_accuracy: 0.3810
Epoch 2/10
1/3 [=========>....................] - ETA: 0s - loss: 3.0670 - accuracy: 0.39163/3 [==============================] - 0s 49ms/step - loss: 2.9653 - accuracy: 0.4218 - val_loss: 2.5280 - val_accuracy: 0.5620
Epoch 3/10
1/3 [=========>....................] - ETA: 0s - loss: 2.4229 - accuracy: 0.59113/3 [==============================] - 0s 55ms/step - loss: 2.3560 - accuracy: 0.5952 - val_loss: 2.1084 - val_accuracy: 0.6060
Epoch 4/10
1/3 [=========>....................] - ETA: 0s - loss: 1.9841 - accuracy: 0.63183/3 [==============================] - 0s 51ms/step - loss: 1.9292 - accuracy: 0.6462 - val_loss: 1.8369 - val_accuracy: 0.6400
Epoch 5/10
1/3 [=========>....................] - ETA: 0s - loss: 1.6664 - accuracy: 0.68233/3 [==============================] - 0s 51ms/step - loss: 1.6364 - accuracy: 0.6864 - val_loss: 1.6363 - val_accuracy: 0.6520
Epoch 6/10
1/3 [=========>....................] - ETA: 0s - loss: 1.4439 - accuracy: 0.72233/3 [==============================] - 0s 53ms/step - loss: 1.4200 - accuracy: 0.7244 - val_loss: 1.4938 - val_accuracy: 0.6880
Epoch 7/10
1/3 [=========>....................] - ETA: 0s - loss: 1.3140 - accuracy: 0.74483/3 [==============================] - 0s 52ms/step - loss: 1.2678 - accuracy: 0.7525 - val_loss: 1.3869 - val_accuracy: 0.7120
Epoch 8/10
1/3 [=========>....................] - ETA: 0s - loss: 1.1677 - accuracy: 0.76203/3 [==============================] - 0s 54ms/step - loss: 1.1342 - accuracy: 0.7710 - val_loss: 1.3115 - val_accuracy: 0.7190
Epoch 9/10
1/3 [=========>....................] - ETA: 0s - loss: 1.0306 - accuracy: 0.79433/3 [==============================] - 0s 53ms/step - loss: 1.0218 - accuracy: 0.7912 - val_loss: 1.2588 - val_accuracy: 0.7310
Epoch 10/10
1/3 [=========>....................] - ETA: 0s - loss: 0.9247 - accuracy: 0.80763/3 [==============================] - 0s 53ms/step - loss: 0.9295 - accuracy: 0.8106 - val_loss: 1.2036 - val_accuracy: 0.7430
/home/ubuntu/anaconda3/envs/tensorflow2_latest_p37/gpu_cuda11.0/lib/python3.7/site-packages/tensorflow/python/keras/datasets/reuters.py:148: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  x_train, y_train = np.array(xs[:idx]), np.array(labels[:idx])
/home/ubuntu/anaconda3/envs/tensorflow2_latest_p37/gpu_cuda11.0/lib/python3.7/site-packages/tensorflow/python/keras/datasets/reuters.py:149: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  x_test, y_test = np.array(xs[idx:]), np.array(labels[idx:])
training_time: 0:00:03.504151
