Number of devices: 6
batch_size_per_replica: 512
batch_size: 3072 = 512 * 6
Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/reuters.npz
   8192/2110848 [..............................] - ETA: 0s 507904/2110848 [======>.......................] - ETA: 0s1032192/2110848 [=============>................] - ETA: 0s1679360/2110848 [======================>.......] - ETA: 0s2113536/2110848 [==============================] - 0s 0us/step
8982 training samples
2246 test samples
11228 total samples
8982 training labels, 2246 test labels
Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/reuters_word_index.json
  8192/550378 [..............................] - ETA: 0s557056/550378 [==============================] - 0s 0us/step
? period ended december 31 shr profit 11 cts vs loss 24 cts net profit 224 271 vs loss 511 349 revs 7 258 688 vs 7 200 349 reuter 3
x_train (8982, 10000)
x_test  (2246, 10000)
y_train_dummy (8982, 46)
y_test_dummy  (2246, 46)
3 [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
4 [0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
y_train (8982, 46)
y_test  (2246, 46)
3 [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
4 [0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
x_val  (1000, 10000)
y_val  (1000, 46)
partial_x_train  (7982, 10000)
partial_y_train  (7982, 46)
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
dense (Dense)                (None, 64)                640064    
_________________________________________________________________
dense_1 (Dense)              (None, 64)                4160      
_________________________________________________________________
dense_2 (Dense)              (None, 46)                2990      
=================================================================
Total params: 647,214
Trainable params: 647,214
Non-trainable params: 0
_________________________________________________________________
Epoch 1/10
1/3 [=========>....................] - ETA: 2s - loss: 3.7996 - accuracy: 0.05473/3 [==============================] - 2s 282ms/step - loss: 3.6561 - accuracy: 0.1976 - val_loss: 3.0147 - val_accuracy: 0.4540
Epoch 2/10
1/3 [=========>....................] - ETA: 0s - loss: 2.9419 - accuracy: 0.46063/3 [==============================] - 0s 51ms/step - loss: 2.8272 - accuracy: 0.4857 - val_loss: 2.4046 - val_accuracy: 0.5660
Epoch 3/10
1/3 [=========>....................] - ETA: 0s - loss: 2.3036 - accuracy: 0.59933/3 [==============================] - 0s 51ms/step - loss: 2.2255 - accuracy: 0.6019 - val_loss: 2.0136 - val_accuracy: 0.6150
Epoch 4/10
1/3 [=========>....................] - ETA: 0s - loss: 1.8414 - accuracy: 0.65983/3 [==============================] - 0s 50ms/step - loss: 1.8304 - accuracy: 0.6539 - val_loss: 1.7824 - val_accuracy: 0.6360
Epoch 5/10
1/3 [=========>....................] - ETA: 0s - loss: 1.6175 - accuracy: 0.68853/3 [==============================] - 0s 53ms/step - loss: 1.5806 - accuracy: 0.6926 - val_loss: 1.6002 - val_accuracy: 0.6710
Epoch 6/10
1/3 [=========>....................] - ETA: 0s - loss: 1.3875 - accuracy: 0.72303/3 [==============================] - 0s 51ms/step - loss: 1.3824 - accuracy: 0.7234 - val_loss: 1.4770 - val_accuracy: 0.6870
Epoch 7/10
1/3 [=========>....................] - ETA: 0s - loss: 1.2777 - accuracy: 0.74063/3 [==============================] - 0s 50ms/step - loss: 1.2496 - accuracy: 0.7488 - val_loss: 1.3770 - val_accuracy: 0.7000
Epoch 8/10
1/3 [=========>....................] - ETA: 0s - loss: 1.1614 - accuracy: 0.75623/3 [==============================] - 0s 51ms/step - loss: 1.1312 - accuracy: 0.7682 - val_loss: 1.2999 - val_accuracy: 0.7210
Epoch 9/10
1/3 [=========>....................] - ETA: 0s - loss: 1.0342 - accuracy: 0.79133/3 [==============================] - 0s 51ms/step - loss: 1.0224 - accuracy: 0.7909 - val_loss: 1.2342 - val_accuracy: 0.7340
Epoch 10/10
1/3 [=========>....................] - ETA: 0s - loss: 0.9382 - accuracy: 0.80533/3 [==============================] - 0s 51ms/step - loss: 0.9320 - accuracy: 0.8080 - val_loss: 1.2090 - val_accuracy: 0.7340
/home/ubuntu/anaconda3/envs/tensorflow2_latest_p37/gpu_cuda11.0/lib/python3.7/site-packages/tensorflow/python/keras/datasets/reuters.py:148: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  x_train, y_train = np.array(xs[:idx]), np.array(labels[:idx])
/home/ubuntu/anaconda3/envs/tensorflow2_latest_p37/gpu_cuda11.0/lib/python3.7/site-packages/tensorflow/python/keras/datasets/reuters.py:149: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  x_test, y_test = np.array(xs[idx:]), np.array(labels[idx:])
training_time: 0:00:03.647198
