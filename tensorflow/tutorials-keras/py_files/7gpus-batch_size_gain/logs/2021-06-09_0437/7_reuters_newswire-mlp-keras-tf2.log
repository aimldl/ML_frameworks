Number of devices: 7
batch_size_per_replica: 512
batch_size: 3584 = 512 * 7
8982 training samples
2246 test samples
11228 total samples
8982 training labels, 2246 test labels
? period ended december 31 shr profit 11 cts vs loss 24 cts net profit 224 271 vs loss 511 349 revs 7 258 688 vs 7 200 349 reuter 3
x_train (8982, 10000)
x_test  (2246, 10000)
y_train_dummy (8982, 46)
y_test_dummy  (2246, 46)
3 [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
4 [0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
y_train (8982, 46)
y_test  (2246, 46)
3 [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
4 [0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
x_val  (1000, 10000)
y_val  (1000, 46)
partial_x_train  (7982, 10000)
partial_y_train  (7982, 46)
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
dense (Dense)                (None, 64)                640064    
_________________________________________________________________
dense_1 (Dense)              (None, 64)                4160      
_________________________________________________________________
dense_2 (Dense)              (None, 46)                2990      
=================================================================
Total params: 647,214
Trainable params: 647,214
Non-trainable params: 0
_________________________________________________________________
Epoch 1/10
1/3 [=========>....................] - ETA: 2s - loss: 3.8568 - accuracy: 0.00423/3 [==============================] - 2s 284ms/step - loss: 3.7884 - accuracy: 0.1381 - val_loss: 3.3462 - val_accuracy: 0.3560
Epoch 2/10
1/3 [=========>....................] - ETA: 0s - loss: 3.3069 - accuracy: 0.37193/3 [==============================] - 0s 50ms/step - loss: 3.2161 - accuracy: 0.3664 - val_loss: 2.7484 - val_accuracy: 0.4610
Epoch 3/10
1/3 [=========>....................] - ETA: 0s - loss: 2.6812 - accuracy: 0.46823/3 [==============================] - 0s 53ms/step - loss: 2.6074 - accuracy: 0.5028 - val_loss: 2.2933 - val_accuracy: 0.6020
Epoch 4/10
1/3 [=========>....................] - ETA: 0s - loss: 2.2185 - accuracy: 0.63813/3 [==============================] - 0s 51ms/step - loss: 2.1518 - accuracy: 0.6300 - val_loss: 1.9755 - val_accuracy: 0.6090
Epoch 5/10
1/3 [=========>....................] - ETA: 0s - loss: 1.8344 - accuracy: 0.66273/3 [==============================] - 0s 57ms/step - loss: 1.8070 - accuracy: 0.6692 - val_loss: 1.7580 - val_accuracy: 0.6480
Epoch 6/10
1/3 [=========>....................] - ETA: 0s - loss: 1.6186 - accuracy: 0.70733/3 [==============================] - 0s 51ms/step - loss: 1.5822 - accuracy: 0.7074 - val_loss: 1.6058 - val_accuracy: 0.6610
Epoch 7/10
1/3 [=========>....................] - ETA: 0s - loss: 1.4243 - accuracy: 0.72993/3 [==============================] - 0s 57ms/step - loss: 1.3999 - accuracy: 0.7358 - val_loss: 1.4750 - val_accuracy: 0.6860
Epoch 8/10
1/3 [=========>....................] - ETA: 0s - loss: 1.2681 - accuracy: 0.75033/3 [==============================] - 0s 51ms/step - loss: 1.2473 - accuracy: 0.7534 - val_loss: 1.3741 - val_accuracy: 0.7230
Epoch 9/10
1/3 [=========>....................] - ETA: 0s - loss: 1.1531 - accuracy: 0.77543/3 [==============================] - 0s 50ms/step - loss: 1.1295 - accuracy: 0.7767 - val_loss: 1.3059 - val_accuracy: 0.7140
Epoch 10/10
1/3 [=========>....................] - ETA: 0s - loss: 1.0451 - accuracy: 0.78543/3 [==============================] - 0s 56ms/step - loss: 1.0297 - accuracy: 0.7891 - val_loss: 1.2440 - val_accuracy: 0.7290
/home/ubuntu/anaconda3/envs/tensorflow2_latest_p37/gpu_cuda11.0/lib/python3.7/site-packages/tensorflow/python/keras/datasets/reuters.py:148: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  x_train, y_train = np.array(xs[:idx]), np.array(labels[:idx])
/home/ubuntu/anaconda3/envs/tensorflow2_latest_p37/gpu_cuda11.0/lib/python3.7/site-packages/tensorflow/python/keras/datasets/reuters.py:149: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  x_test, y_test = np.array(xs[idx:]), np.array(labels[idx:])
training_time: 0:00:03.548800
