Number of devices: 7
batch_size_per_replica: 512
batch_size: 3584 = 512 * 7
8982 training samples
2246 test samples
11228 total samples
8982 training labels, 2246 test labels
? period ended december 31 shr profit 11 cts vs loss 24 cts net profit 224 271 vs loss 511 349 revs 7 258 688 vs 7 200 349 reuter 3
x_train (8982, 10000)
x_test  (2246, 10000)
y_train_dummy (8982, 46)
y_test_dummy  (2246, 46)
3 [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
4 [0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
y_train (8982, 46)
y_test  (2246, 46)
3 [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
4 [0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
x_val  (1000, 10000)
y_val  (1000, 46)
partial_x_train  (7982, 10000)
partial_y_train  (7982, 46)
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
dense (Dense)                (None, 64)                640064    
_________________________________________________________________
dense_1 (Dense)              (None, 64)                4160      
_________________________________________________________________
dense_2 (Dense)              (None, 46)                2990      
=================================================================
Total params: 647,214
Trainable params: 647,214
Non-trainable params: 0
_________________________________________________________________
Epoch 1/10
1/3 [=========>....................] - ETA: 2s - loss: 3.8334 - accuracy: 0.01283/3 [==============================] - 2s 280ms/step - loss: 3.7520 - accuracy: 0.1832 - val_loss: 3.1677 - val_accuracy: 0.5890
Epoch 2/10
1/3 [=========>....................] - ETA: 0s - loss: 3.1271 - accuracy: 0.59603/3 [==============================] - 0s 50ms/step - loss: 3.0037 - accuracy: 0.6129 - val_loss: 2.4767 - val_accuracy: 0.6250
Epoch 3/10
1/3 [=========>....................] - ETA: 0s - loss: 2.3679 - accuracy: 0.66293/3 [==============================] - 0s 57ms/step - loss: 2.3015 - accuracy: 0.6595 - val_loss: 2.0383 - val_accuracy: 0.6460
Epoch 4/10
1/3 [=========>....................] - ETA: 0s - loss: 1.9064 - accuracy: 0.69203/3 [==============================] - 0s 50ms/step - loss: 1.8573 - accuracy: 0.6936 - val_loss: 1.7522 - val_accuracy: 0.6700
Epoch 5/10
1/3 [=========>....................] - ETA: 0s - loss: 1.6080 - accuracy: 0.70373/3 [==============================] - 0s 49ms/step - loss: 1.5668 - accuracy: 0.7110 - val_loss: 1.5762 - val_accuracy: 0.6980
Epoch 6/10
1/3 [=========>....................] - ETA: 0s - loss: 1.3797 - accuracy: 0.73583/3 [==============================] - 0s 49ms/step - loss: 1.3658 - accuracy: 0.7405 - val_loss: 1.4544 - val_accuracy: 0.6940
Epoch 7/10
1/3 [=========>....................] - ETA: 0s - loss: 1.2345 - accuracy: 0.76143/3 [==============================] - 0s 50ms/step - loss: 1.2287 - accuracy: 0.7601 - val_loss: 1.3457 - val_accuracy: 0.7340
Epoch 8/10
1/3 [=========>....................] - ETA: 0s - loss: 1.1148 - accuracy: 0.78383/3 [==============================] - 0s 51ms/step - loss: 1.1053 - accuracy: 0.7870 - val_loss: 1.2799 - val_accuracy: 0.7280
Epoch 9/10
1/3 [=========>....................] - ETA: 0s - loss: 1.0074 - accuracy: 0.80163/3 [==============================] - 0s 49ms/step - loss: 1.0060 - accuracy: 0.8021 - val_loss: 1.2077 - val_accuracy: 0.7470
Epoch 10/10
1/3 [=========>....................] - ETA: 0s - loss: 0.9297 - accuracy: 0.81643/3 [==============================] - 0s 56ms/step - loss: 0.9252 - accuracy: 0.8174 - val_loss: 1.1693 - val_accuracy: 0.7650
/home/ubuntu/anaconda3/envs/tensorflow2_latest_p37/gpu_cuda11.0/lib/python3.7/site-packages/tensorflow/python/keras/datasets/reuters.py:148: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  x_train, y_train = np.array(xs[:idx]), np.array(labels[:idx])
/home/ubuntu/anaconda3/envs/tensorflow2_latest_p37/gpu_cuda11.0/lib/python3.7/site-packages/tensorflow/python/keras/datasets/reuters.py:149: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  x_test, y_test = np.array(xs[idx:]), np.array(labels[idx:])
training_time: 0:00:03.607966
